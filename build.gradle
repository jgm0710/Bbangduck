plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'bbangduck.bd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets")) // Rest Docs 문서조각(snippet)이 생기는 위치 지정
}

ext['spring-restdocs.version'] = '2.0.5.RELEASE'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core:4.3.1'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('com.h2database:h2')
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test'

    //Jpa show-sql 파라미터 값을 볼 수 있도록 의존성 추가
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.3")

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'

    //asciidoctor 추가
    // .adoc 파일에서 사용할 스니펫 속성이 자동으로 구성되어 build/generated-snippets 을 가리키게 됩니다
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'

    //@ConfigurationProperties 를 사용하기 위한 위존성 추가
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // 로그인 기능 구현을 위한 spring security oauth2 의존성 추가
    // https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
    implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.4.0.RELEASE'

    // restTemplate 을 위한 의존성 추가
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient'

    // jwt 인증 토큰을 구현하기 위한 의존성 추가
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // 이미지 파일 크기 조정을 위한 의존성 추가
    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'




}

// asciidoctor 플러그인 설정 시작
test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task copyDocument(type: Copy) {
    from file("build/asciidoc/html5")
    into file("src/main/resources/static/docs")
}

task copyDocumentToBuild(type: Copy) {
    dependsOn copyDocument

    from file("build/asciidoc/html5")
    // resources/static/docs 로 복사하여 서버가 돌아가고 있을때 /docs/index.html 로 접속하면 볼수 있음
    into file("build/resources/main/static/docs")
}

build {
    dependsOn copyDocumentToBuild
}

// asciidoctor 플러그인 설정 종료

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
